$break-small: 320px;
$break-large: 1024px;

// mix in for responsive css
@mixin respond-to($media) {
  @if $media == handhelds {
    @media only screen and (max-width: $break-small) { @content; }
  }
  @else if $media == medium-screens {
    @media only screen and (min-width: $break-small + 1) and (max-width: $break-large - 1) { @content; }
  }
  @else if $media == wide-screens {
    @media only screen and (min-width: $break-large) { @content; }
  }
}

.drawer {
  $drawer-width: 45vw;
  $drawer-width-medium: 500px;

  display: block;

  >div {
    box-sizing: border-box;
    transition: -webkit-transform ease 250ms;
    transition: transform ease 250ms;
    z-index: 8;
    top: 20%;
  }

  #panels {
    border-width: 1px;
    position: absolute;
    background:	#eaeaea;

    box-shadow: 0 8px 16px 0 grey;
    height:80%;

    // comparison here
    @include respond-to(handhelds) {
      right: $drawer-width-medium*-1;
      width: $drawer-width-medium;
    }
    @include respond-to(medium-screens) {
      right: $drawer-width-medium*-1;
      width: $drawer-width-medium;
    }
    @include respond-to(wide-screens) {
      right: $drawer-width*-1;
      width: $drawer-width;
    }

    #panels-wrapper {
      margin-top: 1em;
      margin-left: 5%;
      margin-right: 5%;


      @include respond-to(handhelds) {
        font-size: 3vw;
      }
      @include respond-to(medium-screens) {
        font-size: 3vw;
      }
      @include respond-to(wide-screens) {
        font-size: 1.5vw;
      }
    }

    &.visible {
      @include respond-to(handhelds) {
        transform: translate3d($drawer-width-medium*-1, 0, 0);
      }
      @include respond-to(medium-screens) {
        transform: translate3d($drawer-width-medium*-1, 0, 0);
      }
      @include respond-to(wide-screens) {
        transform: translate3d($drawer-width*-1, 0, 0);
      }
    }
  }

  #controls {
    position: absolute;
    right: 0;
    top: 20%;
    background-color: transparent;

    &.visible {
      // comparison here
      @include respond-to(handhelds) {
        transform: translate3d($drawer-width-medium*-1, 0, 0);
      }
      @include respond-to(medium-screens) {
        transform: translate3d($drawer-width-medium*-1, 0, 0);
      }
      @include respond-to(wide-screens) {
        transform: translate3d($drawer-width*-1, 0, 0);
      }
    }
  }

  ul {
    list-style: none;
    padding-left: 0;
    margin-bottom: 0;

    @include respond-to(handhelds) {
      font-size: 3vw;
    }
    @include respond-to(medium-screens) {
      font-size: 3vw;
    }
    @include respond-to(wide-screens) {
      font-size: 2vw;
    }

    li {
      border: 1px solid;
      border-color: #aaa;
      border-right-color: transparent;
      background-color: white;

      padding: 6px 8px;
      position: relative;

      font-size: 100%;
      font-weight: normal;

      margin-bottom: 0.2vw;
      border-radius: 0.5vw 0 0 0.5vw;
    }

    li:hover {
      cursor: pointer;
      cursor: hand;
      font-weight: bold;
    }

    .selected {
      font-weight: bold;
      font-size: 2.5vw;
    }
  }
}
